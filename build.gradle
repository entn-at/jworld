plugins {
    id "java"
    id "net.tribe-seven.swig" version "0.1.1"
}


repositories {
    jcenter()
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
}

dependencies {
    testCompile group: 'org.testng', name: 'testng', version: '6.8.13'
    testCompile group: 'com.google.guava', name: 'guava', version: '18.0'
}

sourceSets {
    main {
        resources {
            srcDir "$buildDir/lib"
        }
    }
}

test {
    useTestNG()
    // environment "LD_LIBRARY_PATH": "$buildDir"
    // environment "DYLD_LIBRARY_PATH":  "$buildDir"
}

task compileWorld() {
    description "Compiling stock world!"

    outputs.files "World/build/libworld.a"
    exec {
        workingDir "World"
        commandLine "make"
    }
}

task compileSwig(type: SwigTask, dependsOn: compileWorld) {
    description "Generate the JNI wrapping necessary files"

    // FIXME
    verbose = true
    enableCpp = true

    // Pathes
    javaSourcesPath = new File("$projectDir/src/main/java/jworld")
    source = new File("$projectDir/swig/world.i")
    wrapperTargetFile = new File("$projectDir/build/world_wrap.cpp")

    // Java info
    module = "World"
    packageName = "jworld"
}

task compileObjects(dependsOn: compileSwig) {
    description "Compiling the objects"

    def JAVA_HOME = System.properties['java.home'] + "/.."
    inputs.files "$buildDir/world_wrap.cpp"
    outputs.files "$buildDir/world_wrap.o"
    buildDir.mkdirs()
    doLast {

        exec {
            commandLine "g++", "-Wall", "-fpic", "-c", "$buildDir/world_wrap.cpp", "-o", "$buildDir/world_wrap.o", "-I${JAVA_HOME}/include/", "-I${JAVA_HOME}/include/linux", "-IWorld/src"
        }
    }
}

task generateLibrary(dependsOn: compileObjects) {
    description "Generate the shared library to be used"
    (new File("$buildDir/lib")).mkdirs()
    doLast {
        exec {
            commandLine "g++", "-shared",
                "-Wl,--no-undefined",
                "World/build/objs/world/matlabfunctions.o", "World/build/objs/world/common.o",
                "World/build/objs/world/d4c.o", "World/build/objs/world/dio.o",
                "World/build/objs/world/cheaptrick.o", "World/build/objs/world/stonemask.o",
                "World/build/objs/world/fft.o",
                "World/build/objs/world/synthesis.o",
                "$buildDir/world_wrap.o",
                "-o", "$buildDir/lib/libworld.so"
        }
    }
}

compileJava.dependsOn generateLibrary
